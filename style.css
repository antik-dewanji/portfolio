/* ========================================
   CERTIFICATE MODAL FUNCTIONALITY
   Add this JavaScript to your HTML or create a separate .js file
   ======================================== */

// Modal functionality for certificates
function openCertModal(imageSrc) {
    const modal = document.getElementById('certificateModal');
    const modalImage = document.getElementById('modalCertImage');
    
    if (modal && modalImage) {
        modal.style.display = 'block';
        modalImage.src = imageSrc;
        document.body.style.overflow = 'hidden'; // Prevent background scrolling
    }
}

function closeCertModal() {
    const modal = document.getElementById('certificateModal');
    if (modal) {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto'; // Restore scrolling
    }
}

// Close modal when clicking outside of image
window.onclick = function(event) {
    const modal = document.getElementById('certificateModal');
    if (event.target === modal) {
        closeCertModal();
    }
}

// Keyboard support for closing modals
document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
        closeCertModal();
    }
});

// Interactive certificate tags functionality
document.addEventListener('DOMContentLoaded', function() {
    // Add ripple effect to certificate skill tags
    document.querySelectorAll('.cert-skills .skill-tag').forEach(tag => {
        tag.addEventListener('click', function(e) {
            e.stopPropagation();
            
            // Scale animation
            this.style.transform = 'scale(0.95)';
            setTimeout(() => {
                this.style.transform = 'translateY(-2px)';
            }, 150);
            
            // Create ripple effect
            const ripple = document.createElement('span');
            ripple.style.position = 'absolute';
            ripple.style.borderRadius = '50%';
            ripple.style.background = 'rgba(255,255,255,0.6)';
            ripple.style.transform = 'scale(0)';
            ripple.style.animation = 'ripple 0.6s linear';
            ripple.style.pointerEvents = 'none';
            
            const rect = this.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            ripple.style.width = ripple.style.height = size + 'px';
            ripple.style.left = (e.clientX - rect.left - size / 2) + 'px';
            ripple.style.top = (e.clientY - rect.top - size / 2) + 'px';
            
            this.style.position = 'relative';
            this.style.overflow = 'hidden';
            this.appendChild(ripple);
            
            setTimeout(() => {
                ripple.remove();
            }, 600);
        });
    });

    // Add ripple animation CSS if not already present
    if (!document.getElementById('ripple-styles')) {
        const style = document.createElement('style');
        style.id = 'ripple-styles';
        style.textContent = `
            @keyframes ripple {
                to {
                    transform: scale(4);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }

    // Enhanced certificate item hover effects
    document.querySelectorAll('.cert-item').forEach(item => {
        item.addEventListener('mouseenter', function() {
            this.style.background = 'rgba(255, 255, 255, 0.95)';
        });
        
        item.addEventListener('mouseleave', function() {
            this.style.background = 'rgba(255, 255, 255, 0.9)';
        });
    });

    // Loading animation for certificate images
    document.querySelectorAll('.cert-image-container').forEach(container => {
        const img = container.querySelector('.cert-image');
        if (img) {
            img.addEventListener('load', function() {
                this.style.opacity = '1';
                this.style.transform = 'scale(1)';
            });
            
            img.addEventListener('error', function() {
                console.warn('Failed to load certificate image:', this.src);
                // You can add a placeholder or error message here
                const overlay = container.querySelector('.image-overlay span');
                if (overlay) {
                    overlay.textContent = 'Image not available';
                }
            });
        }
    });

    // Smooth scroll behavior for certificate section
    const certSection = document.querySelector('.certifications-grid');
    if (certSection) {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.querySelectorAll('.cert-item').forEach((item, index) => {
                        setTimeout(() => {
                            item.style.opacity = '1';
                            item.style.transform = 'translateY(0)';
                        }, index * 100);
                    });
                }
            });
        }, {
            threshold: 0.1
        });

        observer.observe(certSection);
        
        // Initially hide certificate items for animation
        certSection.querySelectorAll('.cert-item').forEach(item => {
            item.style.opacity = '0';
            item.style.transform = 'translateY(20px)';
            item.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        });
    }
});

// Function to preload certificate images (optional performance enhancement)
function preloadCertificateImages() {
    const imageContainers = document.querySelectorAll('.cert-image-container img');
    imageContainers.forEach(img => {
        if (img.src) {
            const preloadImg = new Image();
            preloadImg.src = img.src;
        }
    });
}

// Call preload function when page loads (optional)
window.addEventListener('load', preloadCertificateImages);
